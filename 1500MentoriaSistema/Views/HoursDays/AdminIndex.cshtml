@model IEnumerable<HoursDay>

@{
    ViewData["Title"] = "Index";
}

<style>
    .floating-windown {
        position: absolute;
        background: white;
        border-radius: 16px;
        padding: 16px;
        width: 300px;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    tfoot tr th {
        overflow: visible;
    }

        tfoot tr th .bootstrap-select {
            max-width: 100%;
        }

            tfoot tr th .bootstrap-select * .filter-option-inner-inner {
                text-overflow: ellipsis;
            }
</style>

<div class="card">
    <div class="card-header">
        <h4 style="margin-bottom: 0">Horas Dia</h4>
    </div>
    <div class="card-body p-0">
        <table id="table" class="table display compact" style="margin-top: 0px !important; width:100%">
            <thead>
                <tr>
                    <th>
                        <input id="chkAll" type="checkbox" class="form-check-input" style="position: initial !important; margin-left: 0px !important" />
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ActualState.Circle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ActualState.Project)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ActualState.TypeObject)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ActualState.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().ActualState.Person.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().InsertDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Hours)
                    </th>
                    <th style="text-align: center">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Delivered)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tfoot style="display: table-header-group;">
                <tr>
                    <th class="clamp-text" style="width: 10px"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                    <th class="clamp-text" style="width: 10%"></th>
                </tr>
            </tfoot>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <input name="chkSelected" type="checkbox" value="@item.Id" class="form-check-input" style="position: initial !important; margin-left: 0px !important" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualState.Circle.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualState.Project.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualState.TypeObject)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualState.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ActualState.Person.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InsertDate)
                        </td>
                        <td class="hours">
                            @Html.DisplayFor(modelItem => item.Hours)
                        </td>
                        <td style="text-align: center">
                            @{
                                var value = item.Delivered ? "Entregue" : "Não";
                            }
                            @value
                        </td>
                        <td>
                            <a class="iconsActions" asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-pen"></i></a> |
                            <a class="iconsActions" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-list"></i></a> |
                            <a class="iconsActions" asp-action="Delete" asp-route-id="@item.Id"><i class="fas fa-trash"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div id="floatingWindow" class="floating-windown row shadow" style="display: none;">
    <div class="col-12" style="display: flex;">
        <h3>Resumo</h3>

        <a id="closeBtn" href="#" style="margin-left: 130px; font-size: 1.5rem"><i class="fas fa-times"></i></a>
    </div>

    <div class="col-12">
        <p id="hoursDay">Tempo Total: </p>
    </div>
</div>

<div class="suspend bg-white shadow text-center px-2 py-2" style="right: 2rem; bottom: 2rem; border-radius: 5rem">
    <div class="row px-2">
        <a class="rounded-button" href="#" id="btnDelete" style="margin-right: 1rem !important; background-color: #ff0000; display: none; border-radius: 50%; align-items: center; justify-content: center;">
            <i class="fas fa-trash" style="color: #ffffff; font-size: 1.5rem;"></i>
        </a>
    </div>
    <div class="row px-2">
        <a class="rounded-button" href="#" id="btnInfo" style="background-color: #6083a8; margin-right: 1rem !important; display: none; border-radius: 50%; align-items: center; justify-content: center;">
            <i class="fas fa-info" style="color: #ffffff; font-size: 1.5rem;"></i>
        </a>
    </div>
    <div class="row px-2">
        <a asp-action="Create" class="rounded-button" style="border-radius: 50%; background-color: #007bff;">
            <i class="fas fa-plus" style="color: #ffffff; font-size: 1.5rem;"></i>
        </a>
    </div>
</div>

@section Scripts
    {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("#btnInfo").click(function () {
                var selectedRows = $("input[name='chkSelected']:checked").closest("tr");
                var valueSum = 0;

                selectedRows.each(function () {
                    var row = $(this);

                    var valueText = row.find(".hours:eq(0)").text().replace(/[^0-9.]/g, '');
                    var value = parseFloat(valueText);

                    if (!isNaN(value))
                        valueSum += value;
                });

                $("#hoursDay").text("Tempo Total: " + valueSum.toFixed(2));

                $('#floatingWindow').css('display', 'block');
            });

            $("#closeBtn").click(function () {
                $('#floatingWindow').css('display', 'none');
            });

            $("#chkAll").click(function () {
                $("input[name='chkSelected']").prop('checked', $(this).prop('checked'));

                if ($(this).prop('checked')) {
                    $('#btnDelete').show();
                    $('#btnInfo').show();
                }
                else {
                    $('#btnDelete').hide();
                    $('#btnInfo').hide();
                }
            });

            $("input[name='chkSelected']").click(function () {
                var selectedIds = $("input[name='chkSelected']:checked").length;

                if ($(this).is(':checked') || selectedIds > 0) {
                    $('#btnDelete').show();
                    $('#btnInfo').show();
                }
                else {
                    $('#btnDelete').hide();
                    $('#btnInfo').hide();
                    $('#chkAll').prop('checked', false);
                }

            });

            $("#btnDelete").click(function () {
                var selectedIds = $("input[name='chkSelected']:checked").map(function () {
                    return $(this).val();
                }).get();

                if (selectedIds.length > 0) {
                    $('#btnDelete').show();

                    if (confirm("Você tem certeza que deseja deletar este(s) registros?")) {
                        $.ajax({
                            url: '@Url.Action("MultipleDelete", "HoursDay")',
                            type: 'POST',
                            data: { ids: selectedIds },
                            success: function () {
                                location.reload();
                            },
                            error: function () {
                                alert("Um erro ocorreu ao tentar deletar este(s) resgistros.");
                            }
                        });
                    }
                } else {
                    $('#btnDelete').hide();

                    alert("Por favor selecione pelo menos um item a ser deletado.");
                }
            });

            const dataTableHandler = new dataTableGenerate('#table');
        });
    </script>
}